/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The git commit trigger that caused a build.
 *
 */
class GitCommitTrigger {
  /**
   * Create a GitCommitTrigger.
   * @member {string} [id] The unique ID of the trigger.
   * @member {string} [commitId] The unique ID that identifies a commit.
   * @member {string} [repositoryUrl] The repository URL.
   * @member {string} [branchName] The branch name in the repository.
   * @member {string} [providerType] The source control provider type.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GitCommitTrigger
   *
   * @returns {object} metadata of GitCommitTrigger
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GitCommitTrigger',
      type: {
        name: 'Composite',
        className: 'GitCommitTrigger',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          commitId: {
            required: false,
            serializedName: 'commitId',
            type: {
              name: 'String'
            }
          },
          repositoryUrl: {
            required: false,
            serializedName: 'repositoryUrl',
            type: {
              name: 'String'
            }
          },
          branchName: {
            required: false,
            serializedName: 'branchName',
            type: {
              name: 'String'
            }
          },
          providerType: {
            required: false,
            serializedName: 'providerType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = GitCommitTrigger;
