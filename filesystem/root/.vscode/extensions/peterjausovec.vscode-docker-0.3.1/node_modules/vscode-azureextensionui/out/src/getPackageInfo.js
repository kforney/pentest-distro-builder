"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("assert");
const callWithTelemetryAndErrorHandling_1 = require("./callWithTelemetryAndErrorHandling");
const extensionVariables_1 = require("./extensionVariables");
const parseError_1 = require("./parseError");
function getPackageInfo(ctx) {
    assert(extensionVariables_1.extInitialized, 'registerUIExtensionVariables must be called first');
    if (!ctx) {
        ctx = extensionVariables_1.ext.context;
    }
    let packageJson;
    // tslint:disable-next-line:no-floating-promises
    callWithTelemetryAndErrorHandling_1.callWithTelemetryAndErrorHandling('azureTools.getPackageInfo', function () {
        this.suppressErrorDisplay = true;
        this.suppressTelemetry = true; // only report errors
        try {
            if (ctx) {
                // tslint:disable-next-line:non-literal-require
                packageJson = require(ctx.asAbsolutePath('package.json'));
            }
            else {
                throw new Error('No extension context');
            }
        }
        catch (error) {
            console.error(`getPackageInfo: ${parseError_1.parseError(error).message}`);
            throw error;
        }
    });
    // tslint:disable-next-line:strict-boolean-expressions
    const extensionName = (packageJson && packageJson.name) || 'vscode-azuretools';
    // tslint:disable-next-line:strict-boolean-expressions
    const extensionVersion = (packageJson && packageJson.version) || 'Unknown';
    const aiKey = packageJson && packageJson.aiKey;
    return { extensionName, extensionVersion, aiKey };
}
exports.getPackageInfo = getPackageInfo;
//# sourceMappingURL=getPackageInfo.js.map