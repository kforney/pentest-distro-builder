/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Recommendation class.
 * @constructor
 * Represents a recommendation result generated by the recommendation engine.
 *
 * @member {date} [creationTime] Timestamp when this instance was created.
 *
 * @member {string} [recommendationId] A GUID value that each recommendation
 * object is associated with.
 *
 * @member {string} [resourceId] Full ARM resource ID string that this
 * recommendation object is associated with.
 *
 * @member {string} [resourceScope] Name of a resource type this recommendation
 * applies, e.g. Subscription, ServerFarm, Site. Possible values include:
 * 'ServerFarm', 'Subscription', 'WebSite'
 *
 * @member {string} [ruleName] Unique name of the rule.
 *
 * @member {string} [displayName] UI friendly name of the rule (may not be
 * unique).
 *
 * @member {string} [message] Recommendation text.
 *
 * @member {string} [level] Level indicating how critical this recommendation
 * can impact. Possible values include: 'Critical', 'Warning', 'Information',
 * 'NonUrgentSuggestion'
 *
 * @member {string} [channels] List of channels that this recommendation can
 * apply. Possible values include: 'Notification', 'Api', 'Email', 'Webhook',
 * 'All'
 *
 * @member {array} [tags] The list of category tags that this recommendation
 * belongs to.
 *
 * @member {string} [actionName] Name of action recommended by this object.
 *
 * @member {date} [startTime] The beginning time in UTC of a range that the
 * recommendation refers to.
 *
 * @member {date} [endTime] The end time in UTC of a range that the
 * recommendation refers to.
 *
 * @member {date} [nextNotificationTime] When to notify this recommendation
 * next in UTC. Null means that this will never be notified anymore.
 *
 * @member {date} [notificationExpirationTime] Date and time in UTC when this
 * notification expires.
 *
 * @member {date} [notifiedTime] Last timestamp in UTC this instance was
 * actually notified. Null means that this recommendation hasn't been notified
 * yet.
 *
 * @member {number} [score] A metric value measured by the rule.
 *
 */
class Recommendation {
  constructor() {
  }

  /**
   * Defines the metadata of Recommendation
   *
   * @returns {object} metadata of Recommendation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Recommendation',
      type: {
        name: 'Composite',
        className: 'Recommendation',
        modelProperties: {
          creationTime: {
            required: false,
            serializedName: 'creationTime',
            type: {
              name: 'DateTime'
            }
          },
          recommendationId: {
            required: false,
            serializedName: 'recommendationId',
            type: {
              name: 'String'
            }
          },
          resourceId: {
            required: false,
            serializedName: 'resourceId',
            type: {
              name: 'String'
            }
          },
          resourceScope: {
            required: false,
            serializedName: 'resourceScope',
            type: {
              name: 'String'
            }
          },
          ruleName: {
            required: false,
            serializedName: 'ruleName',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          level: {
            required: false,
            serializedName: 'level',
            type: {
              name: 'Enum',
              allowedValues: [ 'Critical', 'Warning', 'Information', 'NonUrgentSuggestion' ]
            }
          },
          channels: {
            required: false,
            serializedName: 'channels',
            type: {
              name: 'Enum',
              allowedValues: [ 'Notification', 'Api', 'Email', 'Webhook', 'All' ]
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          actionName: {
            required: false,
            serializedName: 'actionName',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          nextNotificationTime: {
            required: false,
            serializedName: 'nextNotificationTime',
            type: {
              name: 'DateTime'
            }
          },
          notificationExpirationTime: {
            required: false,
            serializedName: 'notificationExpirationTime',
            type: {
              name: 'DateTime'
            }
          },
          notifiedTime: {
            required: false,
            serializedName: 'notifiedTime',
            type: {
              name: 'DateTime'
            }
          },
          score: {
            required: false,
            serializedName: 'score',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = Recommendation;
