/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the PolicyAssignment class.
 * @constructor
 * The policy definition.
 *
 * @member {string} [displayName] The display name of the policy assignment.
 *
 * @member {string} [policyDefinitionId] The ID of the policy definition.
 *
 * @member {string} [scope] The scope for the policy assignment.
 *
 * @member {object} [parameters] Required if a parameter is used in policy
 * rule.
 *
 * @member {string} [description] This message will be part of response in case
 * of policy violation.
 *
 * @member {string} [id] The ID of the policy assignment.
 *
 * @member {string} [type] The type of the policy assignment.
 *
 * @member {string} [name] The name of the policy assignment.
 *
 */
class PolicyAssignment extends models['BaseResource'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of PolicyAssignment
   *
   * @returns {object} metadata of PolicyAssignment
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PolicyAssignment',
      type: {
        name: 'Composite',
        className: 'PolicyAssignment',
        modelProperties: {
          displayName: {
            required: false,
            serializedName: 'properties.displayName',
            type: {
              name: 'String'
            }
          },
          policyDefinitionId: {
            required: false,
            serializedName: 'properties.policyDefinitionId',
            type: {
              name: 'String'
            }
          },
          scope: {
            required: false,
            serializedName: 'properties.scope',
            type: {
              name: 'String'
            }
          },
          parameters: {
            required: false,
            serializedName: 'properties.parameters',
            type: {
              name: 'Object'
            }
          },
          description: {
            required: false,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PolicyAssignment;
