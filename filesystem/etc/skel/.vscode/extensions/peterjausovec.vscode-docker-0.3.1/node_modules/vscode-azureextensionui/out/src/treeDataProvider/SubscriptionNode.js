"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const AzureParentNode_1 = require("./AzureParentNode");
class SubscriptionNode extends AzureParentNode_1.AzureParentNode {
    constructor(treeDataProvider, childProvider, nodeId, session, subscriptionDisplayName, subscriptionId, onNodeCreateEmitter) {
        super(undefined, {
            id: nodeId,
            label: subscriptionDisplayName,
            contextValue: SubscriptionNode.contextValue,
            iconPath: path.join(__filename, '..', '..', '..', '..', 'resources', 'azureSubscription.svg'),
            childTypeLabel: childProvider.childTypeLabel,
            compareChildren: childProvider.compareChildren,
            createChild: childProvider.createChild ? childProvider.createChild.bind(childProvider) : undefined,
            hasMoreChildren: childProvider.hasMoreChildren.bind(childProvider),
            loadMoreChildren: childProvider.loadMoreChildren.bind(childProvider)
        }, onNodeCreateEmitter);
        this._treeDataProvider = treeDataProvider;
        this._session = session;
        this._subscriptionId = subscriptionId;
        this._subscriptionDisplayName = subscriptionDisplayName;
    }
    get subscriptionId() {
        return this._subscriptionId;
    }
    get subscriptionDisplayName() {
        return this._subscriptionDisplayName;
    }
    get tenantId() {
        return this._session.tenantId;
    }
    get userId() {
        return this._session.userId;
    }
    get credentials() {
        return this._session.credentials;
    }
    get environment() {
        return this._session.environment;
    }
    get treeDataProvider() {
        return this._treeDataProvider;
    }
}
SubscriptionNode.contextValue = 'azureextensionui.azureSubscription';
exports.SubscriptionNode = SubscriptionNode;
//# sourceMappingURL=SubscriptionNode.js.map